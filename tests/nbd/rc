#!/bin/bash
#
# NBD tests.
#
# Copyright (C) 2018 Josef Bacik
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

. common/rc

group_requires() {
	_have_root && _have_nbd && modprobe nbd
}

_have_nbd() {
	if ! _have_module nbd; then
		return 1
	fi
	if ! _have_program nbd-server; then
		return 1
	fi
	if ! _have_program nbd-client; then
		return 1
	fi
	if ! nbd-client --help 2>&1 | grep -q -- -L; then
		SKIP_REASON="nbd-client does not have -nonetlink/-L option"
		return 1
	fi
	return 0
}

_have_nbd_netlink() {
	if ! _have_nbd; then
		return 1
	fi
	if ! _have_program genl-ctrl-list; then
		return 1
	fi
	if ! genl-ctrl-list | grep -q nbd; then
		SKIP_REASON="nbd does not support netlink"
		return 1
	fi
	return 0
}

_wait_for_nbd_connect() {
	for ((i = 0; i < 3; i++)); do
		if [[ -e /sys/kernel/debug/nbd/nbd0/tasks ]]; then
			return 0
		fi
		sleep 1
	done
	return 1
}

_wait_for_nbd_disconnect() {
	for ((i = 0; i < 3; i++)); do
		if [[ ! -e /sys/kernel/debug/nbd/nbd0/tasks ]]; then
			return 0
		fi
		sleep 1
	done
	return 1
}

_start_nbd_server() {
	truncate -s 10G "${TMPDIR}/export"
	cat > "${TMPDIR}/nbd.conf" << EOF
[generic]
[export]
exportname=${TMPDIR}/export
EOF
	nbd-server -p "${TMPDIR}/nbd.pid" -C "${TMPDIR}/nbd.conf"
}

_stop_nbd_server() {
	kill -SIGTERM "$(cat "${TMPDIR}/nbd.pid")"
	rm -f "${TMPDIR}/nbd.pid"
	rm -f "${TMPDIR}/export"
}
