#!/bin/bash
# SPDX-License-Identifier: GPL-2.0+
# Copyright (c) 2017-2018 Western Digital Corporation or its affiliates.
#
# Test NVMe smart-log command on NVMeOF with a file-backed ns.

. tests/nvme/rc

DESCRIPTION="test NVMe smart-log command on NVMeOF file-backed ns"
QUICK=1

requires() {
	_nvme_requires
	_have_modules loop
}

test() {
	echo "Running ${TEST_NAME}"

	_setup_nvmet

	local port
	local nvmedev
	local file_path="$TMPDIR/img"
	local subsys_name="blktests-subsystem-1"

	truncate -s 1G "${file_path}"

	_create_nvmet_subsystem "${subsys_name}" "${file_path}" \
		"91fdba0d-f87b-4c25-b80f-db7be1418b9e"
	port="$(_create_nvmet_port "${nvme_trtype}")"
	_add_nvmet_subsys_to_port "${port}" "${subsys_name}"

	_nvme_connect_subsys "${nvme_trtype}" "${subsys_name}"

	nvmedev="$(_find_nvme_dev)"
	cat "/sys/block/${nvmedev}n1/uuid"
	cat "/sys/block/${nvmedev}n1/wwid"

	if ! nvme smart-log "/dev/${nvmedev}" -n 1 >> "$FULL" 2>&1; then
		echo "ERROR: smart-log file-ns failed"
	fi
	_nvme_disconnect_subsys "${subsys_name}" >> "$FULL" 2>&1

	_remove_nvmet_subsystem_from_port "${port}" "${subsys_name}"
	_remove_nvmet_subsystem "${subsys_name}"
	_remove_nvmet_port "${port}"

	rm -f "${file_path}"

	echo "Test complete"
}
