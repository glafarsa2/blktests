#!/bin/bash
# SPDX-License-Identifier: GPL-2.0+
# Copyright (c) 2017-2018 Western Digital Corporation or its affiliates.
#
# Test NVMe DSM Discard command on NVMeOF with a block-device ns.

. tests/nvme/rc

DESCRIPTION="test NVMe DSM Discard command on NVMeOF block-device ns"
QUICK=1

requires() {
	_nvme_requires
	_have_modules loop
}

test() {
	echo "Running ${TEST_NAME}"

	_setup_nvmet

	local port
	local nvmedev
	local loop_dev
	local file_path="$TMPDIR/img"
	local subsys_name="blktests-subsystem-1"
	local nblk_range="10,10,10,10,10,10,10,10,10,10"
	local sblk_range="100,200,300,400,500,600,700,800,900,1000"

	truncate -s 1G "${file_path}"

	loop_dev="$(losetup -f --show "${file_path}")"

	_create_nvmet_subsystem "${subsys_name}" "${loop_dev}" \
		"91fdba0d-f87b-4c25-b80f-db7be1418b9e"
	port="$(_create_nvmet_port "loop")"
	_add_nvmet_subsys_to_port "${port}" "${subsys_name}"

	nvme connect -t loop -n "${subsys_name}"

	nvmedev="$(_find_nvme_loop_dev)"
	cat "/sys/block/${nvmedev}n1/uuid"
	cat "/sys/block/${nvmedev}n1/wwid"

	nvme dsm "/dev/${nvmedev}" -n 1 -d -s "${sblk_range}" -b "${nblk_range}"

	nvme disconnect -n "${subsys_name}"

	_remove_nvmet_subsystem_from_port "${port}" "${subsys_name}"
	_remove_nvmet_subsystem "${subsys_name}"
	_remove_nvmet_port "${port}"

	losetup -d "${loop_dev}"

	rm -f "${file_path}"

	echo "Test complete"
}
